plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
    id "org.jetbrains.kotlin.kapt" version "1.3.72"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.72"
    id "groovy"
    id "com.github.johnrengelman.shadow" version "6.0.0"
    id "application"
}

version "0.1"
group "finance"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    kapt(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    kapt("io.micronaut:micronaut-inject-java")
    kapt("io.micronaut:micronaut-validation")
    implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-validation")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-http-client")
    //implementation("io.micronaut:micronaut-data-model:1.1.1")
// https://mvnrepository.com/artifact/io.micronaut.data/micronaut-data-model
    implementation group: 'io.micronaut.data', name: 'micronaut-data-model', version: '1.1.0'
    //implementation("io.micronaut.data:micronaut-data-hibernate-jpa")

    kapt("io.micronaut.data:micronaut-data-processor:1.1.0")
    //implementation("implementation 'io.micronaut.data:micronaut-data-hibernate-jpa:1.1.1")
    //implementation("implementation 'io.micronaut.data:micronaut-data-hibernate-jpa")
    // https://mvnrepository.com/artifact/io.micronaut.data/micronaut-data-hibernate-jpa
    compile group: 'io.micronaut.data', name: 'micronaut-data-hibernate-jpa', version: '1.1.0'


    implementation("io.micronaut.data:micronaut-data-jdbc:1.1.0")



//    api "org.hibernate:hibernate-core:5.4.17.Final", {
//        //exclude group: "javax.persistence", module:"javax.persistence-api"
//        //exclude group: 'org.jboss.spec.javax.transaction', module: 'jboss-transaction-api_1.2_spec'
//        //exclude group: 'org.javassist', module: 'javassist'
//        //exclude group: 'org.jboss:jandex', module: 'jar'
//    }

    //implementation("io.micronaut.data:micronaut-data-hibernate-jpa")

    //runtimeOnly("io.micronaut.configuration:micronaut-jdbc-tomcat")
    runtime "io.micronaut.configuration:micronaut-jdbc-tomcat:2.2.6"
    //runtimeOnly "io.micronaut.configuration:micronaut-jdbc-hikari"
    runtimeOnly "org.postgresql:postgresql:42.2.14"

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    testImplementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    testImplementation("io.micronaut:micronaut-inject-groovy")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testImplementation("io.micronaut.test:micronaut-test-spock")
}

test.classpath += configurations.developmentOnly

mainClassName = "finance.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.toVersion('1.8')
}

allOpen {
    annotation("io.micronaut.aop.Around")
}
compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}
kapt {
    arguments {
        arg("micronaut.processing.incremental", true)
        arg("micronaut.processing.annotations", "com.example.*")
        arg("micronaut.processing.group", "com.example")
        arg("micronaut.processing.module", "finance")
    }
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
    if (gradle.startParameter.continuous) {
        systemProperties(
            'micronaut.io.watch.restart':'true',
            'micronaut.io.watch.enabled':'true',
            "micronaut.io.watch.paths":"src/main"
        )
    }
}
